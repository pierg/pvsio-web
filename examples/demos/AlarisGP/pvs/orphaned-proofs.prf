("alaris2lnewmodes.pump" pump_th tick_case_infuse_and_infusionrateLvtbi_TCC6 0 (tick_case_infuse_and_infusionrateLvtbi_TCC6-1 nil 3640423193 ("" (subtype-tcc) nil nil) nil nil))("alaris2lnewmodes" alaris_th key1_case_dispvtbi_tbagmode_TCC3 0 (key1_case_dispvtbi_tbagmode_TCC3-1 nil 3640432523 ("" (subtype-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (>= const-decl "bool" reals nil) (nonneg_int nonempty-type-eq-decl nil integers nil) (> const-decl "bool" reals nil) (posnat nonempty-type-eq-decl nil integers nil) (maxrate formal-const-decl "posnat" alaris_th nil) (maxinfuse formal-const-decl "posnat" alaris_th nil) (nonneg_real nonempty-type-eq-decl nil real_types nil) (posreal nonempty-type-eq-decl nil real_types nil) (<= const-decl "bool" reals nil) (infusemin formal-const-decl "{infusemin: posreal | infusemin <= maxinfuse}" alaris_th nil) (timeout formal-const-decl "posnat" alaris_th nil) (< const-decl "bool" reals nil) (shorttimeout formal-const-decl "{shorttimeout: posnat | shorttimeout < timeout}" alaris_th nil) (AND const-decl "[bool, bool -> bool]" booleans nil) (maxtime formal-const-decl "{maxtime: posnat | maxtime > timeout AND maxtime >= maxinfuse}" alaris_th nil) (numfield nonempty-type-eq-decl nil number_fields nil) (+ const-decl "[numfield, numfield -> numfield]" number_fields nil) (bat_max formal-const-decl "{bat_max: posnat | bat_max + 1 < maxtime}" alaris_th nil) (bat_min formal-const-decl "{bat_min: posnat | bat_min < bat_max}" alaris_th nil) (ibagscursor type-eq-decl nil types_and_constants_th nil) (abags type-eq-decl nil types_and_constants_th nil) (steprate type-eq-decl nil types_and_constants_th nil) (steptime type-eq-decl nil types_and_constants_th nil) (stepvol type-eq-decl nil types_and_constants_th nil) (pump type-eq-decl nil pump_th nil) (emodes type-decl nil types_and_constants_th nil) (ifunctions type-decl nil types_and_constants_th nil) (string type-eq-decl nil strings nil) (imid type-eq-decl nil types_and_constants_th nil) (irates type-eq-decl nil types_and_constants_th nil) (itimes type-eq-decl nil types_and_constants_th nil) (ivols type-eq-decl nil types_and_constants_th nil) (o_menu type-eq-decl nil types_and_constants_th nil) (presstime type-eq-decl nil types_and_constants_th nil) (qcurse type-eq-decl nil types_and_constants_th nil) (iline type-decl nil types_and_constants_th nil) (chev_buttons type-decl nil types_and_constants_th nil) (alaris type-eq-decl nil alaris_th nil) (per_key1 const-decl "bool" alaris_th nil) (even? const-decl "bool" integers nil) (even_int nonempty-type-eq-decl nil integers nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (no_button_down const-decl "bool" alaris_th nil) (maxpress const-decl "nat" types_and_constants_th nil) (/= const-decl "boolean" notequal nil)) nil))